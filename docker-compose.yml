version: '2'
services:
  nginx:
    image: nginx:alpine
    container_name: ${DOCKER_NGINX_NAME}
    restart: always
    volumes:
      # www
      - ./:/var/www/html/
      # configs
      - ./docker/nginx/conf.d/:/etc/nginx/conf.d/
      - ./docker/nginx/mime.types:/etc/nginx/mime.types
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      # logs
      - ./docker/nginx/logs:/var/log/nginx/
      # https
      - ./docker/nginx/certs/ssl/:/var/www/ssl/
      - ./docker/nginx/certs/challenges/:/var/www/challenge/
    ports:
      - "${DOCKER_NGINX_HTTP_PORT}:80"
      - "${DOCKER_NGINX_HTTPS_PORT}:443"
    environment:
      - TZ=${DOCKER_TZ}
    links:
      - "php:php-fpm"
    networks:
      - frontend

  php:
    build: ./docker
    container_name: ${DOCKER_PHP_NAME}
    restart: always
    working_dir: /var/www/html/
    volumes:
      - ./:/var/www/html/
      - ./docker/php/php.ini:/etc/php7/php.ini
      - ./docker/php/php-fpm.conf:/etc/php7/php-fpm.conf
    environment:
      - TZ=${DOCKER_TZ}
    links:
      - "mysql:mysql"
      - "redis:redis"
    networks:
      - backend
      - frontend

  mysql:
    image: mysql:5.7
    container_name: ${DOCKER_MYSQL_NAME}
    restart: always
    environment:
      - TZ=${DOCKER_TZ}
      - MYSQL_USER=${DOCKER_MYSQL_USER}
      - MYSQL_DATABASE=${DOCKER_MYSQL_DATABASE}
      - MYSQL_PASSWORD=${DOCKER_MYSQL_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${DOCKER_MYSQL_ROOT_PASSWORD}
    command: ['mysqld', '--character-set-server=utf8']
    networks:
      - backend

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: ${DOCKER_MYSQL_ADMIN}
    restart: "no"
    links:
      - "mysql:db"
    ports:
      - "8080:80"
    networks:
      - backend

  redis:
    image: redis:latest
    container_name: ${DOCKER_REDIS_NAME}
    restart: always
    environment:
      - TZ=${DOCKER_TZ}
    networks:
      - backend

networks:
  backend:
  frontend:
